<<<<<<< HEAD
setwd("~/Documents/crossLanguageSentimentAnalysis")
=======
contributors()
citation()
demo
demo()
install.packages("tidyverse")
tidyverse_update()
install.packages("tidyverse")
install.packages("tidyverse")
install.packages('arules')
install.packages('arulesViz')
library('arules')
library('arulesViz')
install.packages('crosstalk')
install.packages('arules')
install.packages("arules")
install.packages('arulesViz')
install.packages("arulesViz")
install.packages('later')
install.packages("arulesViz")
update.packages()
q
q()
update.packages()
q()
install.packages("arulesViz")
unlink(".RData")
>>>>>>> origin/master
library(magrittr)
library(dplyr)
library(rtf)
library(NonCompart)
library(ncar)
<<<<<<< HEAD
install.packages('VennDiagram')
library(VennDiagram)
data <- read.csv(file="goodDataLatest.csv",head=TRUE,sep=",")
data$ID <- seq.int(nrow(data))
#Google sentiment analysis(Google translation)
googleSentimentAnalysisGoogleTranslation <- data %>% select(ID, Chinese.origin.data, Google.translated.data, Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data., Google.English.sentiment.analysis.score.base.on.Google.translated.data.) %>%
filter( ((Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data. > 0.5) & (Google.English.sentiment.analysis.score.base.on.Google.translated.data. < -0.5)) | ((Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data. < -0.5) & (Google.English.sentiment.analysis.score.base.on.Google.translated.data. > 0.5)) )
#Google sentiment analysis(Baidu translation)
googleSentimentAnalysisBaiduTranslation <- data %>% select(ID, Chinese.origin.data, Baidu.translated.data, Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data., Google.English.sentiment.analysis.score.base.on.Baidu.translated.data.) %>%
filter( ((Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data. > 0.5) & (Google.English.sentiment.analysis.score.base.on.Baidu.translated.data. < -0.5)) | ((Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data. < -0.5) & (Google.English.sentiment.analysis.score.base.on.Baidu.translated.data. > 0.5)) )
#Google sentiment analysis(Yandex translation)
googleSentimentAnalysisYandexTranslation <- data %>% select(ID, Chinese.origin.data, Yandex.translated.data, Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data., Google.English.sentiment.analysis.score.base.on.Yandex.translated.data.) %>%
filter( ((Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data. > 0.5) & (Google.English.sentiment.analysis.score.base.on.Yandex.translated.data. < -0.5)) | ((Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data. < -0.5) & (Google.English.sentiment.analysis.score.base.on.Yandex.translated.data. > 0.5)) )
a <- c(1,3,5,7,9)
nrow(googleSentimentAnalysisGoogleTranslation)
googleSentimentAnalysisGoogleTranslation
googleSentimentAnalysisBaiduTranslation
googleSentimentAnalysisYandexTranslation
intersect(intersect(googleSentimentAnalysisGoogleTranslation$ID,googleSentimentAnalysisBaiduTranslation$ID),googleSentimentAnalysisYandexTranslation$ID)
b <- c(3,6,8,9,10)
c <- c(2,3,4,5,7,9)
intersect(intersect(a,b),c)
length(a)
length(intersect(intersect(googleSentimentAnalysisGoogleTranslation$ID, googleSentimentAnalysisBaiduTranslation$ID), googleSentimentAnalysisYandexTranslation$ID))
grid.newpage()
draw.triple.venn(area1 = nrow(googleSentimentAnalysisGoogleTranslation), area2 = nrow(googleSentimentAnalysisBaiduTranslation), area3 = nrow(googleSentimentAnalysisYandexTranslation), n12 = length(intersect(googleSentimentAnalysisGoogleTranslation$ID, googleSentimentAnalysisBaiduTranslation$ID)), n23 = length(intersect(googleSentimentAnalysisBaiduTranslation$ID, googleSentimentAnalysisYandexTranslation$ID)), n13 = length(intersect(googleSentimentAnalysisGoogleTranslation$ID, googleSentimentAnalysisYandexTranslation$ID)),
n123 = length(intersect(intersect(googleSentimentAnalysisGoogleTranslation$ID, googleSentimentAnalysisBaiduTranslation$ID), googleSentimentAnalysisYandexTranslation$ID)), category = c("Google Translation", "Baidu Translation", "Yandex Translation"), lty = "blank",
fill = c("skyblue", "pink1", "mediumorchid"))
=======
data <- read.csv(file="goodDataLatest.csv",head=TRUE,sep=",")
setwd("~/Documents/project/crossLanguageSentimentAnalysis")
library(magrittr)
library(dplyr)
library(rtf)
library(NonCompart)
library(ncar)
data <- read.csv(file="goodDataLatest.csv",head=TRUE,sep=",")
info <-
data %>% group_by(ranking) %>%
summarise(IQR=IQR(Baidu.Chinese.sentiment.analysis.positive.probability.base.on.Chinese.origin.data.), Mean=mean(Baidu.Chinese.sentiment.analysis.positive.probability.base.on.Chinese.origin.data.), Median=median(Baidu.Chinese.sentiment.analysis.positive.probability.base.on.Chinese.origin.data.), Q1=quantile (Baidu.Chinese.sentiment.analysis.positive.probability.base.on.Chinese.origin.data., probs=0.25), Q3=quantile(Baidu.Chinese.sentiment.analysis.positive.probability.base.on.Chinese.origin.data., probs=0.75))
lowerExtreme <- info$Q1 - 1.5 * info$IQR
upperExtreme <- info$Q3 + 1.5 * info$IQR
info <- cbind(info, lowerExtreme, upperExtreme)
rm(lowerExtreme, upperExtreme)
#slope first Argument: vector values of independent variable, usually time. Second argument: vector values of dependent variable, usually concentration
meanSlope <- lm(info$Mean ~ info$ranking)$coeff[2]
medianSlope <- lm(info$Median ~ info$ranking)$coeff[2]
meanSlope
medianSlope
info
info <-
data %>% group_by(ranking) %>%
summarise(IQR=IQR(Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data.), Mean=mean(Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data.), Median=median(Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data.), Q1=quantile (Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data., probs=0.25), Q3=quantile(GGoogle.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data., probs=0.75))
lowerExtreme <- info$Q1 - 1.5 * info$IQR
upperExtreme <- info$Q3 + 1.5 * info$IQR
info <- cbind(info, lowerExtreme, upperExtreme)
rm(lowerExtreme, upperExtreme)
#slope first Argument: vector values of independent variable, usually time. Second argument: vector values of dependent variable, usually concentration
meanSlope <- lm(info$Mean ~ info$ranking)$coeff[2]
medianSlope <- lm(info$Median ~ info$ranking)$coeff[2]
meanSlope
medianSlope
info
#Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data.
info <-
data %>% group_by(ranking) %>%
summarise(IQR=IQR(Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data.), Mean=mean(Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data.), Median=median(Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data.), Q1=quantile (Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data., probs=0.25), Q3=quantile(Google.Chinese.sentiment.analysis.score.base.on.Chinese.origin.data., probs=0.75))
lowerExtreme <- info$Q1 - 1.5 * info$IQR
upperExtreme <- info$Q3 + 1.5 * info$IQR
info <- cbind(info, lowerExtreme, upperExtreme)
rm(lowerExtreme, upperExtreme)
#slope first Argument: vector values of independent variable, usually time. Second argument: vector values of dependent variable, usually concentration
meanSlope <- lm(info$Mean ~ info$ranking)$coeff[2]
medianSlope <- lm(info$Median ~ info$ranking)$coeff[2]
meanSlope
medianSlope
info
#Google.English.sentiment.analysis.score.base.on.Google.translated.data.
info <-
data %>% group_by(ranking) %>%
summarise(IQR=IQR(Google.English.sentiment.analysis.score.base.on.Google.translated.data.), Mean=mean(Google.English.sentiment.analysis.score.base.on.Google.translated.data.), Median=median(Google.English.sentiment.analysis.score.base.on.Google.translated.data.), Q1=quantile (Google.English.sentiment.analysis.score.base.on.Google.translated.data., probs=0.25), Q3=quantile(Google.English.sentiment.analysis.score.base.on.Google.translated.data., probs=0.75))
lowerExtreme <- info$Q1 - 1.5 * info$IQR
upperExtreme <- info$Q3 + 1.5 * info$IQR
info <- cbind(info, lowerExtreme, upperExtreme)
rm(lowerExtreme, upperExtreme)
#slope first Argument: vector values of independent variable, usually time. Second argument: vector values of dependent variable, usually concentration
meanSlope <- lm(info$Mean ~ info$ranking)$coeff[2]
medianSlope <- lm(info$Median ~ info$ranking)$coeff[2]
meanSlope
medianSlope
info
#Google.English.sentiment.analysis.score.base.on.Yandex.translated.data.
info <-
data %>% group_by(ranking) %>%
summarise(IQR=IQR(Google.English.sentiment.analysis.score.base.on.Yandex.translated.data.), Mean=mean(Google.English.sentiment.analysis.score.base.on.Yandex.translated.data.), Median=median(Google.English.sentiment.analysis.score.base.on.Yandex.translated.data.), Q1=quantile (Google.English.sentiment.analysis.score.base.on.Yandex.translated.data., probs=0.25), Q3=quantile(Google.English.sentiment.analysis.score.base.on.Yandex.translated.data., probs=0.75))
lowerExtreme <- info$Q1 - 1.5 * info$IQR
upperExtreme <- info$Q3 + 1.5 * info$IQR
info <- cbind(info, lowerExtreme, upperExtreme)
rm(lowerExtreme, upperExtreme)
#slope first Argument: vector values of independent variable, usually time. Second argument: vector values of dependent variable, usually concentration
meanSlope <- lm(info$Mean ~ info$ranking)$coeff[2]
medianSlope <- lm(info$Median ~ info$ranking)$coeff[2]
meanSlope
medianSlope
info
>>>>>>> origin/master
